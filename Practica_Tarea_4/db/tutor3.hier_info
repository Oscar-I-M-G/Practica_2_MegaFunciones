|tutor3
LCD_RS <= LCD_Display:inst1.LCD_RS
KEY3_ACLR => LCD_Display:inst1.reset
KEY3_ACLR => inst4.IN0
CLK_50Mhz => LCD_Display:inst1.clk_48Mhz
CLK_50Mhz => clk_div:inst.clock_48Mhz
DATA_BUS[0] <> LCD_Display:inst1.DATA_BUS[0]
DATA_BUS[1] <> LCD_Display:inst1.DATA_BUS[1]
DATA_BUS[2] <> LCD_Display:inst1.DATA_BUS[2]
DATA_BUS[3] <> LCD_Display:inst1.DATA_BUS[3]
DATA_BUS[4] <> LCD_Display:inst1.DATA_BUS[4]
DATA_BUS[5] <> LCD_Display:inst1.DATA_BUS[5]
DATA_BUS[6] <> LCD_Display:inst1.DATA_BUS[6]
DATA_BUS[7] <> LCD_Display:inst1.DATA_BUS[7]
SW2_MODE => lpm_counter0:inst2.updown
SW2_MODE => lpm_counter0:inst9.updown
SW0_PULSE => debounce:inst3.pb
KEY0_LOAD => DEBOUNCE:inst7.pb
SW[10] => lpm_counter0:inst2.data[0]
SW[11] => lpm_counter0:inst2.data[1]
SW[12] => lpm_counter0:inst2.data[2]
SW[13] => lpm_counter0:inst2.data[3]
SW[14] => lpm_counter0:inst9.data[0]
SW[15] => lpm_counter0:inst9.data[1]
SW[16] => lpm_counter0:inst9.data[2]
SW[17] => lpm_counter0:inst9.data[3]
LCD_RW <= LCD_Display:inst1.LCD_RW
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_EN <= LCD_Display:inst1.LCD_E


|tutor3|LCD_Display:inst1
reset => LCD_RW_INT.PRESET
reset => LCD_RS~reg0.ACLR
reset => LCD_E~reg0.PRESET
reset => DATA_BUS_VALUE[0].ACLR
reset => DATA_BUS_VALUE[1].ACLR
reset => DATA_BUS_VALUE[2].ACLR
reset => DATA_BUS_VALUE[3].PRESET
reset => DATA_BUS_VALUE[4].PRESET
reset => DATA_BUS_VALUE[5].PRESET
reset => DATA_BUS_VALUE[6].ACLR
reset => DATA_BUS_VALUE[7].ACLR
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_400HZ.OUTPUTSELECT
reset => next_command~3.DATAIN
reset => state~14.DATAIN
reset => CHAR_COUNT[0].ENA
reset => CHAR_COUNT[4].ENA
reset => CHAR_COUNT[3].ENA
reset => CHAR_COUNT[2].ENA
reset => CHAR_COUNT[1].ENA
clk_48Mhz => CLK_400HZ.CLK
clk_48Mhz => CLK_COUNT_400HZ[0].CLK
clk_48Mhz => CLK_COUNT_400HZ[1].CLK
clk_48Mhz => CLK_COUNT_400HZ[2].CLK
clk_48Mhz => CLK_COUNT_400HZ[3].CLK
clk_48Mhz => CLK_COUNT_400HZ[4].CLK
clk_48Mhz => CLK_COUNT_400HZ[5].CLK
clk_48Mhz => CLK_COUNT_400HZ[6].CLK
clk_48Mhz => CLK_COUNT_400HZ[7].CLK
clk_48Mhz => CLK_COUNT_400HZ[8].CLK
clk_48Mhz => CLK_COUNT_400HZ[9].CLK
clk_48Mhz => CLK_COUNT_400HZ[10].CLK
clk_48Mhz => CLK_COUNT_400HZ[11].CLK
clk_48Mhz => CLK_COUNT_400HZ[12].CLK
clk_48Mhz => CLK_COUNT_400HZ[13].CLK
clk_48Mhz => CLK_COUNT_400HZ[14].CLK
clk_48Mhz => CLK_COUNT_400HZ[15].CLK
clk_48Mhz => CLK_COUNT_400HZ[16].CLK
clk_48Mhz => CLK_COUNT_400HZ[17].CLK
clk_48Mhz => CLK_COUNT_400HZ[18].CLK
clk_48Mhz => CLK_COUNT_400HZ[19].CLK
Hex_Display_Data[0] => Mux6.IN31
Hex_Display_Data[1] => Mux5.IN31
Hex_Display_Data[2] => Mux4.IN31
Hex_Display_Data[3] => Mux3.IN31
Hex_Display_Data[4] => Mux6.IN30
Hex_Display_Data[5] => Mux5.IN30
Hex_Display_Data[6] => Mux4.IN30
Hex_Display_Data[7] => Mux3.IN30
LCD_RS <= LCD_RS~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_E <= LCD_E~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= LCD_RW_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[0] <> DATA_BUS[0]
DATA_BUS[1] <> DATA_BUS[1]
DATA_BUS[2] <> DATA_BUS[2]
DATA_BUS[3] <> DATA_BUS[3]
DATA_BUS[4] <> DATA_BUS[4]
DATA_BUS[5] <> DATA_BUS[5]
DATA_BUS[6] <> DATA_BUS[6]
DATA_BUS[7] <> DATA_BUS[7]


|tutor3|lpm_counter0:inst2
aclr => lpm_counter:lpm_counter_component.aclr
aload => lpm_counter:lpm_counter_component.aload
cin => lpm_counter:lpm_counter_component.cin
clock => lpm_counter:lpm_counter_component.clock
data[0] => lpm_counter:lpm_counter_component.data[0]
data[1] => lpm_counter:lpm_counter_component.data[1]
data[2] => lpm_counter:lpm_counter_component.data[2]
data[3] => lpm_counter:lpm_counter_component.data[3]
updown => lpm_counter:lpm_counter_component.updown
cout <= lpm_counter:lpm_counter_component.cout
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|tutor3|lpm_counter0:inst2|lpm_counter:lpm_counter_component
clock => cntr_4uj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => cntr_4uj:auto_generated.updown
aclr => cntr_4uj:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_4uj:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_4uj:auto_generated.data[0]
data[1] => cntr_4uj:auto_generated.data[1]
data[2] => cntr_4uj:auto_generated.data[2]
data[3] => cntr_4uj:auto_generated.data[3]
cin => cntr_4uj:auto_generated.cin
q[0] <= cntr_4uj:auto_generated.q[0]
q[1] <= cntr_4uj:auto_generated.q[1]
q[2] <= cntr_4uj:auto_generated.q[2]
q[3] <= cntr_4uj:auto_generated.q[3]
cout <= cntr_4uj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|tutor3|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_4uj:auto_generated
aclr => aclr_actual.IN0
aclr => effective_clrn[3].IN0
aclr => effective_clrn[2].IN0
aclr => effective_clrn[1].IN0
aclr => effective_clrn[0].IN0
aclr => _.IN0
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
cin => time_to_clear.IN1
cin => counter_comb_bita0.CIN
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
data[0] => _.IN1
data[0] => a_data[0].IN1
data[1] => _.IN1
data[1] => a_data[1].IN1
data[2] => _.IN1
data[2] => a_data[2].IN1
data[3] => _.IN1
data[3] => a_data[3].IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
updown => counter_comb_bita3.IN1
updown => counter_comb_bita2.IN1
updown => counter_comb_bita1.IN1
updown => counter_comb_bita0.IN1
updown => _.IN0
updown => cout_actual.IN1


|tutor3|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_4uj:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|tutor3|clk_div:inst
clock_48Mhz => clock_1Hz_reg.CLK
clock_48Mhz => clock_10Hz_reg.CLK
clock_48Mhz => clock_100hz_reg.CLK
clock_48Mhz => clock_1Khz_reg.CLK
clock_48Mhz => clock_10Khz_reg.CLK
clock_48Mhz => clock_100Khz_reg.CLK
clock_48Mhz => clock_1Mhz_reg.CLK
clock_48Mhz => clock_1Mhz_int.CLK
clock_48Mhz => count_1Mhz[0].CLK
clock_48Mhz => count_1Mhz[1].CLK
clock_48Mhz => count_1Mhz[2].CLK
clock_48Mhz => count_1Mhz[3].CLK
clock_48Mhz => count_1Mhz[4].CLK
clock_48Mhz => count_1Mhz[5].CLK
clock_48Mhz => count_1Mhz[6].CLK
clock_48Mhz => clock_1Hz~reg0.CLK
clock_48Mhz => clock_10Hz~reg0.CLK
clock_48Mhz => clock_100Hz~reg0.CLK
clock_48Mhz => clock_1KHz~reg0.CLK
clock_48Mhz => clock_10KHz~reg0.CLK
clock_48Mhz => clock_100KHz~reg0.CLK
clock_48Mhz => clock_1MHz~reg0.CLK
clock_1MHz <= clock_1MHz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_100KHz <= clock_100KHz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_10KHz <= clock_10KHz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_1KHz <= clock_1KHz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_100Hz <= clock_100Hz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_10Hz <= clock_10Hz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_1Hz <= clock_1Hz~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tutor3|debounce:inst3
pb => SHIFT_PB[3].DATAIN
clock_100Hz => pb_debounced~reg0.CLK
clock_100Hz => SHIFT_PB[0].CLK
clock_100Hz => SHIFT_PB[1].CLK
clock_100Hz => SHIFT_PB[2].CLK
clock_100Hz => SHIFT_PB[3].CLK
pb_debounced <= pb_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tutor3|debounce:inst7
pb => SHIFT_PB[3].DATAIN
clock_100Hz => pb_debounced~reg0.CLK
clock_100Hz => SHIFT_PB[0].CLK
clock_100Hz => SHIFT_PB[1].CLK
clock_100Hz => SHIFT_PB[2].CLK
clock_100Hz => SHIFT_PB[3].CLK
pb_debounced <= pb_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tutor3|lpm_counter0:inst9
aclr => lpm_counter:lpm_counter_component.aclr
aload => lpm_counter:lpm_counter_component.aload
cin => lpm_counter:lpm_counter_component.cin
clock => lpm_counter:lpm_counter_component.clock
data[0] => lpm_counter:lpm_counter_component.data[0]
data[1] => lpm_counter:lpm_counter_component.data[1]
data[2] => lpm_counter:lpm_counter_component.data[2]
data[3] => lpm_counter:lpm_counter_component.data[3]
updown => lpm_counter:lpm_counter_component.updown
cout <= lpm_counter:lpm_counter_component.cout
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|tutor3|lpm_counter0:inst9|lpm_counter:lpm_counter_component
clock => cntr_4uj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => cntr_4uj:auto_generated.updown
aclr => cntr_4uj:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_4uj:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_4uj:auto_generated.data[0]
data[1] => cntr_4uj:auto_generated.data[1]
data[2] => cntr_4uj:auto_generated.data[2]
data[3] => cntr_4uj:auto_generated.data[3]
cin => cntr_4uj:auto_generated.cin
q[0] <= cntr_4uj:auto_generated.q[0]
q[1] <= cntr_4uj:auto_generated.q[1]
q[2] <= cntr_4uj:auto_generated.q[2]
q[3] <= cntr_4uj:auto_generated.q[3]
cout <= cntr_4uj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|tutor3|lpm_counter0:inst9|lpm_counter:lpm_counter_component|cntr_4uj:auto_generated
aclr => aclr_actual.IN0
aclr => effective_clrn[3].IN0
aclr => effective_clrn[2].IN0
aclr => effective_clrn[1].IN0
aclr => effective_clrn[0].IN0
aclr => _.IN0
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
cin => time_to_clear.IN1
cin => counter_comb_bita0.CIN
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
data[0] => _.IN1
data[0] => a_data[0].IN1
data[1] => _.IN1
data[1] => a_data[1].IN1
data[2] => _.IN1
data[2] => a_data[2].IN1
data[3] => _.IN1
data[3] => a_data[3].IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
updown => counter_comb_bita3.IN1
updown => counter_comb_bita2.IN1
updown => counter_comb_bita1.IN1
updown => counter_comb_bita0.IN1
updown => _.IN0
updown => cout_actual.IN1


|tutor3|lpm_counter0:inst9|lpm_counter:lpm_counter_component|cntr_4uj:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


